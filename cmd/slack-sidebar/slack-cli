#!/bin/bash

MNT='/tmp/slack'
SLACK='./slack-sidebar'
SESSION='slack'

# setup session
if ! tmux list-sessions | grep -q "^$SESSION-shared:"; then
    tmux -2 new-session -d -s "$SESSION-shared" -n slackfs slackfs "$MNT"
    sleep 5
fi

# start or re-start sidebar
if ! tmux list-windows -t "$SESSION-shared" | grep -q "\\Wsidebar\\W"; then
    tmux -2 new-window -t "$SESSION-shared:1" -n sidebar "$SLACK" "$MNT"
    tmux resize-pane -x 24
fi

create_window() {
    if [ $# -ne 2 ]; then
        echo >&2 "usage: create_window CHANNEL_TYPE CHANNEL_NAME"
        return 1
    fi

    channel_type="$1"
    channel_name="$2"
    dir="$MNT/$channel_type/by-name/$channel_name"
    window="${channel_type}/${channel_name}"

    # bail if we've already created this window
    if tmux list-window -t "$SESSION" | grep "\W$window\W"; then
	return 0
    fi

    if ! tmux list-sessions | grep -q "^$SESSION:"; then
	tmux new-session -d -s "$SESSION"  -n "$window" tail -f "$dir/session"
    else
	tmux new-window -a -t "$SESSION:0" -n "$window" tail -f "$dir/session"
    fi
    # tmux inside tmux causes all sorts of issues, and is why we have
    # all the explicit targets below.
    tmux split-window -t "$SESSION:$window.0" -b -h "unset TMUX; exec tmux attach -t $SESSION-shared:sidebar"
    tmux resize-pane  -t "$SESSION:$window.1" -x 24 
    tmux split-window -t "$SESSION:$window.0" -l 2 -v "cat >$dir/write"
    tmux select-pane  -t "$SESSION:$window.2"
}

create_window channels general
create_window ims chris
create_window ims slackbot
create_window ims jeff

exec tmux attach -t "$SESSION"
